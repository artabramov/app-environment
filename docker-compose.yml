version: "3.2"
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    depends_on:
      - mysql
      - app
    restart: unless-stopped
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 1G

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.6.2
    container_name: filebeat
    depends_on:
      - elasticsearch
    restart: unless-stopped
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - apache_log:/var/log/apache:ro
      - mysql_log:/var/log/mysql:ro
      - app_log:/var/log/app:ro
    command: ["filebeat", "-e", "-strict.perms=false"]
    deploy:
      resources:
        limits:
          memory: 1G

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    depends_on:
      - elasticsearch
    restart: unless-stopped
    ports:
      - 5601:5601
    links:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 1G

  mysql:
    image: mysql:8.0.28
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --general-log=1 --general-log-file=/var/log/mysql/mysql.log --slow-query-log=1 --long-query-time=1 --slow-query-log-file=/var/log/mysql/mysql-slow.log
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "${MYSQL_ALLOW_EMPTY_PASSWORD}"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_log:/var/log/mysql
    ports:
      - "3306:3306"
    deploy:
      resources:
        limits:
          memory: 1G

  redis:
    image: bitnami/redis:6.2.6
    container_name: redis
    command: redis-server --protected-mode no --loglevel warning --logfile /var/log/redis/redis-server.log
    restart: always
    environment:
      #- ALLOW_EMPTY_PASSWORD=yes
      #- REDIS_MASTER_PASSWORD="${REDIS_MASTER_PASSWORD}"
      - REDIS_PASSWORD="admin"
      - REDIS_AOF_ENABLED=no
    volumes:
    - redis_log:/var/log/redis
    user: root # for write log permissions
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 1G

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    depends_on:
      - redis
    restart: always
    environment:
    - REDIS_HOSTS=redis:host.docker.internal:6379
    - REDIS_PASSWORD="admin"
    ports:
    - "8081:8081"

  flower:
    image: mher/flower:0.9.7
    container_name: flower
    depends_on:
      - redis
    working_dir: /data
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://host.docker.internal:6379/0
      CELERY_RESULT_BACKEND: redis://host.docker.internal:6379/1
    volumes:
    - flower_data:/data
    deploy:
      resources:
        limits:
          memory: 1G

  app:
    image: app
    container_name: app
    depends_on:
      - mysql
      - redis
    restart: always
    volumes:
    - apache_log:/var/log/apache2
    - app_log:/var/log/app
    - celery_log:/var/log/celery
    ports:
    - "8080:80"
    #environment:
    #- SET_CONTAINER_TIMEZONE=true
    #- TZ=Etc/UTC

volumes:
  mysql_data:
  mysql_log:
  apache_log:
  app_log:
  flower_data:
  elasticsearch_data:
  celery_log:
  redis_log:
